------------------------------------------------
-------------- MEMBER 관련 테이블 ---------------
------------------------------------------------
﻿CREATE TABLE MEMBER (
	M_NO	NUMBER		NOT NULL,
	M_ID	VARCHAR2(500)		NOT NULL,
	M_PW	VARCHAR2(500)		NULL,
	M_NAME	VARCHAR2(500)		NULL,
	M_EMAIL	VARCHAR2(500)		NULL,
	M_PHONE	VARCHAR2(20)		NULL,
	M_ADDRESS	VARCHAR2(1000)	NULL,
	M_GENDER	CHAR(1)		NULL,
	M_BIRTH	DATE   	NULL,
	M_JOINDATE	DATE	DEFAULT CURRENT_DATE	NULL,
	M_AUTHORIZATION	CHAR(1)	 DEFAULT 'U'	NULL,
	M_STATUS	CHAR(1)	 DEFAULT 'Y'	NULL,
	M_JOINWAY	VARCHAR2(20)	DEFAULT 'MY'	NULL,
    M_POSTNUM NUMBER	NULL,
    M_DETAILADDRESS	VARCHAR2(1000)	NULL
);

COMMENT ON COLUMN MEMBER.M_NO IS '회원 번호';
COMMENT ON COLUMN MEMBER.M_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.M_PW IS '비밀번호';
COMMENT ON COLUMN MEMBER.M_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.M_EMAIL IS '이메일 주소';
COMMENT ON COLUMN MEMBER.M_PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.M_ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.M_BIRTH IS '생년월일';
COMMENT ON COLUMN MEMBER.M_GENDER IS '성별';
COMMENT ON COLUMN MEMBER.M_JOINDATE IS '가입일';
COMMENT ON COLUMN MEMBER.M_STATUS IS '계정상태';
COMMENT ON COLUMN MEMBER.M_AUTHORIZATION IS '계정권한';
COMMENT ON COLUMN MEMBER.M_JOINWAY IS '가입방법';
COMMENT ON COLUMN MEMBER.M_POSTNUM IS '우편번호';
COMMENT ON COLUMN MEMBER.M_DETAILADDRESS IS '상세주소';

-- 세션Id와 유효시간을 설정할 수 있는 컬럼
ALTER TABLE MEMBER ADD COLUMN SESSIONKEY VARCHAR2(50) DEFAULT 'NONE';
ALTER TABLE MEMBER ADD COLUMN SESSIONLIMIT TIMESTAMP;

-- MEMBER 시퀀스
CREATE SEQUENCE MEMBER_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       MAXVALUE 9999
       NOCYCLE
       NOCACHE
       NOORDER;
       
-- MEMBER PK
ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	M_NO
);


------------------------------------------------
-------------- NOTICE 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE NOTICE (
	N_NO	NUMBER		NOT NULL,
	N_TITLE	VARCHAR2(50)		NULL,
    N_WRITERNO NUMBER NOT NULL,
    N_ID    VARCHAR2(500)       NULL,
	N_CONTENT	VARCHAR2(30000)		NULL,
	N_ORIGINAL_FILENAME	VARCHAR2(100)		NULL,
	N_RENAMED_FILENAME	VARCHAR2(100)		NULL,
	N_READCOUNT	NUMBER		NULL,
	N_STATUS	VARCHAR2(1)		NULL,
	N_CREATE_DATE	DATE	DEFAULT CURRENT_DATE	NULL,
	N_TOPTITLE	NUMBER	DEFAULT 0	NULL
);

COMMENT ON COLUMN NOTICE.N_NO IS '공지사항 번호';
COMMENT ON COLUMN NOTICE.N_TITLE IS '공지사항 제목';
COMMENT ON COLUMN NOTICE.N_WRITERNO IS '공지사항 작성자번호';
COMMENT ON COLUMN NOTICE.N_ID IS '공지사항 작성자';
COMMENT ON COLUMN NOTICE.N_CONTENT IS '공지사항 내용';
COMMENT ON COLUMN NOTICE.N_READCOUNT IS '공지사항 조회수';
COMMENT ON COLUMN NOTICE.N_STATUS IS '공지사항 상태';
COMMENT ON COLUMN NOTICE.N_CREATE_DATE IS '공지사항 작성일';
COMMENT ON COLUMN NOTICE.N_ORIGINAL_FILENAME IS '공지사항 원래파일명';
COMMENT ON COLUMN NOTICE.N_RENAMED_FILENAME IS '공지사항 변경파일명';
COMMENT ON COLUMN NOTICE.N_TOPTITLE IS '공지사항 최상위게시물';


-- NOTICE 시퀀스
CREATE SEQUENCE SEQ_NOTICE_NO;

-- NOTICE PK
ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	N_NO
);
-- NOTICE FK
ALTER TABLE NOTICE ADD CONSTRAINT FK_MEMBER_TO_NOTICE_1 FOREIGN KEY (
	N_WRITERNO
) REFERENCES MEMBER (
	M_NO
);


------------------------------------------------
------------- CONTENTS 관련 테이블 --------------
------------------------------------------------
CREATE TABLE CONTENTS (
	C_NO	NUMBER		NOT NULL,
	C_TITLE	VARCHAR2(300)		NULL,
	C_TYPE	VARCHAR2(20)		NULL,
	C_GENRE	VARCHAR2(60)		NULL,
	C_YEAR	NUMBER		NULL,
	C_NATION	VARCHAR2(20)		NULL,
    C_AGE   NUMBER      NULL,
	C_INFO	VARCHAR2(3000)		NULL,
	C_SYNOP	VARCHAR2(3000)		NULL,
	C_OBIMG	VARCHAR2(3000)		NULL,
	C_BIMG	VARCHAR2(3000)		NULL,
	C_OPIMG	VARCHAR2(3000)		NULL,
	C_PIMG	VARCHAR2(3000)		NULL,
	C_VIDEO	VARCHAR2(3000)		NULL,
	C_DATE	DATE		NULL,
	C_STATUS	VARCHAR2(1)		NULL,
    C_LEFTCOLOR VARCHAR2(30) NULL,
    C_RIGHTCOLOR VARCHAR2(30),
    C_VIEWDATE DATE DEFAULT CURRENT_DATE NULL,
    C_VIEWCOUNT NUMBER DEFAULT 0 NULL
);

COMMENT ON COLUMN CONTENTS.C_NO IS '컨텐츠 번호';
COMMENT ON COLUMN CONTENTS.C_TITLE IS '컨텐츠 명';
COMMENT ON COLUMN CONTENTS.C_TYPE IS '컨텐츠 타입';
COMMENT ON COLUMN CONTENTS.C_GENRE IS '컨텐츠 장르';
COMMENT ON COLUMN CONTENTS.C_YEAR IS '컨텐츠 연도';
COMMENT ON COLUMN CONTENTS.C_NATION IS '컨텐츠 국적';
COMMENT ON COLUMN CONTENTS.C_AGE IS '컨텐츠 연령가';
COMMENT ON COLUMN CONTENTS.C_INFO IS '컨텐츠 안내';
COMMENT ON COLUMN CONTENTS.C_SYNOP IS '컨텐츠 줄거리';
COMMENT ON COLUMN CONTENTS.C_OBIMG IS '컨텐츠 배경 이미지 원본';
COMMENT ON COLUMN CONTENTS.C_BIMG IS '컨텐츠 배경 이미지 변경';
COMMENT ON COLUMN CONTENTS.C_OPIMG IS '컨텐츠 프로필 이미지 원본';
COMMENT ON COLUMN CONTENTS.C_PIMG IS '컨텐츠 프로필 이미지 변경';
COMMENT ON COLUMN CONTENTS.C_VIDEO IS '컨텐츠 영상';
COMMENT ON COLUMN CONTENTS.C_DATE IS '컨텐츠 등록일';
COMMENT ON COLUMN CONTENTS.C_STATUS IS '컨텐츠 등록상태';
COMMENT ON COLUMN CONTENTS.C_LEFTCOLOR IS '컨텐츠 배경 색상(좌)';
COMMENT ON COLUMN CONTENTS.C_RIGHTCOLOR IS '컨텐츠 배경 색상(우)';
COMMENT ON COLUMN CONTENTS.C_VIEWDATE IS '현재 날짜(조회수 저장용)';
COMMENT ON COLUMN CONTENTS.C_VIEWCOUNT IS '조회수';

-- CONTENTS 시퀀스
CREATE SEQUENCE CONTENTS_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       MAXVALUE 9999
       NOCYCLE
       NOCACHE
       NOORDER;

-- CONTENTS PK
ALTER TABLE CONTENTS ADD CONSTRAINT PK_CONTENTS PRIMARY KEY (
	C_NO
);

------------------------------------------------
------------- COMMENTS 관련 테이블 --------------
------------------------------------------------
CREATE TABLE COMMENTS (
	CM_NO	NUMBER		NOT NULL,
	B_NO	NUMBER		NOT NULL,
	CM_CONTENT	VARCHAR2(1000)	NULL,
	CM_DATE	DATE		NULL,
    CM_WRITER_ID    VARCHAR2(500)   NULL,
    CM_STATUS    VARCHAR2(1) DEFAULT 'Y'  NULL,
    CM_WRITER_NO    NUMBER   NULL
);

-- COMMENTS 시퀀스
CREATE SEQUENCE SEQ_COMMENTS_NO;

-- COMMENTS PK
ALTER TABLE COMMENTS ADD CONSTRAINT PK_COMMENTS PRIMARY KEY (
	CM_NO
);

COMMENT ON COLUMN COMMENTS.CM_NO IS '댓글 번호';
COMMENT ON COLUMN COMMENTS.B_NO IS '게시글 번호';
COMMENT ON COLUMN COMMENTS.CM_CONTENT IS '내용';
COMMENT ON COLUMN COMMENTS.CM_DATE IS '작성일자';
COMMENT ON COLUMN COMMENTS.CM_WRITER_ID IS '댓글 작성자 아이디';
COMMENT ON COLUMN COMMENTS.CM_STATUS IS '댓글 상태';
COMMENT ON COLUMN COMMENTS.CM_WRITER_NO IS '댓글 작성자 번호';


------------------------------------------------
--------------- LIKES 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE LIKES (
	M_NO	NUMBER		NOT NULL,
	C_NO	NUMBER		NOT NULL
);

COMMENT ON COLUMN LIKES.M_NO IS '회원 번호';
COMMENT ON COLUMN LIKES.C_NO IS '컨텐츠 번호';

------------------------------------------------
--------------- PEOPLE 관련 테이블 --------------
------------------------------------------------
CREATE TABLE PEOPLE (
	PEOPLE_NO	NUMBER		NOT NULL,
	PEOPLE_ORIGINAL_FILENAME	VARCHAR2(3000)		NULL,
	PEOPLE_RENAMED_FILENAME	VARCHAR2(3000)		NULL,
	PEOPLE_NAME	VARCHAR2(300)		NOT NULL,
	PEOPLE_JOB	VARCHAR2(300)		NULL,
	PEOPLE_DEBUT	VARCHAR2(500)		NULL,
	PEOPLE_BIRTH	VARCHAR2(500)		NULL,
	PEOPLE_AWARD	VARCHAR2(500)		NULL,
	PEOPLE_GENDER	VARCHAR2(50)		NULL,
    PEOPLE_STATUS VARCHAR2(1) DEFAULT 'Y' NULL
);

COMMENT ON COLUMN PEOPLE.PEOPLE_NO IS '인물 번호';
COMMENT ON COLUMN PEOPLE.PEOPLE_ORIGINAL_FILENAME IS '인물 기존 파일명';
COMMENT ON COLUMN PEOPLE.PEOPLE_RENAMED_FILENAME IS '인물 변경 파일명';
COMMENT ON COLUMN PEOPLE.PEOPLE_NAME IS '인물 이름';
COMMENT ON COLUMN PEOPLE.PEOPLE_JOB IS '인물 직업';
COMMENT ON COLUMN PEOPLE.PEOPLE_DEBUT IS '인물 데뷔';
COMMENT ON COLUMN PEOPLE.PEOPLE_BIRTH IS '인물 출생일';
COMMENT ON COLUMN PEOPLE.PEOPLE_AWARD IS '인물 수상';
COMMENT ON COLUMN PEOPLE.PEOPLE_GENDER IS '인물 성별';
COMMENT ON COLUMN PEOPLE.PEOPLE_STATUS IS '인물 등록 상태';


-- PEOPLE 시퀀스
CREATE SEQUENCE SEQ_PEOPLE_NO;

-- PEOPLE PK
ALTER TABLE PEOPLE ADD CONSTRAINT PK_PEOPLE PRIMARY KEY (
	PEOPLE_NO
);


------------------------------------------------
--------------- CART 관련 테이블 ----------------
------------------------------------------------
CREATE TABLE CART (
	M_NO	NUMBER		NOT NULL,
	P_NO	NUMBER		NOT NULL,
    C_STATUS VARCHAR2(6) DEFAULT 'Y' NULL
);

COMMENT ON COLUMN CART.M_NO IS '회원 번호';
COMMENT ON COLUMN CART.P_NO IS '상품 번호';
COMMENT ON COLUMN CART.C_STATUS IS '장바구니 상태';

-- CART 시퀀스
CREATE SEQUENCE SEQ_CARTNO START WITH 1;

-- CART PK
ALTER TABLE CART ADD CONSTRAINT PK_CART PRIMARY KEY (
	M_NO,
	P_NO
);

-- CART FK
ALTER TABLE CART ADD CONSTRAINT FK_MEMBER_TO_CART_1 FOREIGN KEY (
	M_NO
) REFERENCES MEMBER (
	M_NO
);

ALTER TABLE CART ADD CONSTRAINT FK_PRODUCT_TO_CART_1 FOREIGN KEY (
	P_NO
) REFERENCES PRODUCT (
	P_NO
);

------------------------------------------------
--------------- PAY 관련 테이블 -----------------
------------------------------------------------
CREATE TABLE PAY (
	PAY_NO	NUMBER		NOT NULL,
	PAY_MERCHANT	VARCHAR2(30)		NULL,
    PAY_METHOD	VARCHAR2(20)		NULL,
	PAY_PRICE	NUMBER		NULL,
    PAY_STATUS	VARCHAR2(30)  DEFAULT '배송준비중' NULL,
    PAY_DATE	DATE  DEFAULT CURRENT_DATE NULL
);

COMMENT ON COLUMN PAY.PAY_NO IS '주문 번호';
COMMENT ON COLUMN PAY.PAY_MERCHANT IS '가맹점식별코드';
COMMENT ON COLUMN PAY.PAY_METHOD IS '결제수단';
COMMENT ON COLUMN PAY.PAY_PRICE IS '결제금액';
COMMENT ON COLUMN PAY.PAY_STATUS IS '결제/배송현황';
COMMENT ON COLUMN PAY.PAY_DATE IS '결제날자';

-- PAY 시퀀스
CREATE SEQUENCE SEQ_PAYNO START WITH 1;

-- PAY PK
ALTER TABLE PAY ADD CONSTRAINT PK_PAY PRIMARY KEY (
	PAY_NO
);


------------------------------------------------
---------- CONTENTSPEOPLE 관련 테이블 -----------
------------------------------------------------
CREATE TABLE CONTENTSPEOPLE (
	C_NO	NUMBER		NOT NULL,
	PEOPLE_NO	NUMBER		NOT NULL,
	CP_ROLE	VARCHAR2(100)		NULL,
    CP_IMG VARCHAR2(1000)  DEFAULT 'https://mblogthumb-phinf.pstatic.net/MjAyMDExMDFfMyAg/MDAxNjA0MjI5NDA4NDMy.5zGHwAo_UtaQFX8Hd7zrDi1WiV5KrDsPHcRzu3e6b8Eg.IlkR3QN__c3o7Qe9z5_xYyCyr2vcx7L_W1arNFgwAJwg.JPEG.gambasg/%EC%9C%A0%ED%8A%9C%EB%B8%8C_%EA%B8%B0%EB%B3%B8%ED%94%84%EB%A1%9C%ED%95%84_%ED%8C%8C%EC%8A%A4%ED%85%94.jpg?type=w800' NULL,
);

COMMENT ON COLUMN CONTENTSPEOPLE.C_NO IS '컨텐츠번호';
COMMENT ON COLUMN CONTENTSPEOPLE.PEOPLE_NO IS '인물번호';
COMMENT ON COLUMN CONTENTSPEOPLE.CP_ROLE IS '역할';
COMMENT ON COLUMN CONTENTSPEOPLE.CP_IMG IS '컨테츠 인물 이미지명';

-- CONTENTSPEOPLE 시퀀스
CREATE SEQUENCE SEQ_CONTENTSPEOPLE_NO;

-- CONTENTSPEOPLE PK
ALTER TABLE CONTENTSPEOPLE ADD CONSTRAINT PK_CONTENTSPEOPLE PRIMARY KEY (
	C_NO,
	PEOPLE_NO
);

-- CONTENTSPEOPLE FK
ALTER TABLE CONTENTSPEOPLE ADD CONSTRAINT FK_CONTENTS_TO_CONTENTSPEOPLE_1 FOREIGN KEY (
	C_NO
) REFERENCES CONTENTS (
	C_NO
);

ALTER TABLE CONTENTSPEOPLE ADD CONSTRAINT FK_PEOPLE_TO_CONTENTSPEOPLE_1 FOREIGN KEY (
	PEOPLE_NO
) REFERENCES PEOPLE (
	PEOPLE_NO
);

------------------------------------------------
--------------- PRODUCT 관련 테이블 -------------
------------------------------------------------
CREATE TABLE PRODUCT (
	P_NO	NUMBER		NOT NULL,
	P_NAME	VARCHAR2(300)		NULL,
	P_PRICE	NUMBER		NULL,
	P_QTT	NUMBER		NULL,
	P_CONTENTS	VARCHAR2(3000)		NULL,
	P_VIEW	NUMBER		NULL,
	P_DATE	DATE		NULL,
	P_STATUS	VARCHAR2(1)		NULL,
	P_ORIGINFILE	VARCHAR2(300)		NULL,
    P_RENAMEFILE	VARCHAR2(300)		NULL,
	P_CATEGORY	VARCHAR2(50)		NULL,
	P_MADELOCAL	VARCHAR2(30)		NULL,
	P_MADECOMPANY	VARCHAR2(30)		NULL
);

COMMENT ON COLUMN PRODUCT.P_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT.P_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.P_PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT.P_QTT IS '수량';
COMMENT ON COLUMN PRODUCT.P_CONTENTS IS '상품설명';
COMMENT ON COLUMN PRODUCT.P_VIEW IS '조회수';
COMMENT ON COLUMN PRODUCT.P_STATUS IS '상품등록상태';
COMMENT ON COLUMN PRODUCT.P_DATE IS '상품등록일';
COMMENT ON COLUMN PRODUCT.P_ORIGINFILE IS '오리지날이미지파일';
COMMENT ON COLUMN PRODUCT.P_RENAMEFILE IS '리네임이미지파일';
COMMENT ON COLUMN PRODUCT.P_CATEGORY IS '상품카테고리';
COMMENT ON COLUMN PRODUCT.P_MADELOCAL IS '상품제조국';
COMMENT ON COLUMN PRODUCT.P_MADECOMPANY IS '상품제조회사';

-- PRODUCT 시퀀스
CREATE SEQUENCE SEQ_PNO START WITH 1;

-- PRODUCT PK
ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	P_NO
);

------------------------------------------------
--------------- ORDERS 관련 테이블 --------------
------------------------------------------------
CREATE TABLE ORDERS (
	M_NO	NUMBER	NOT NULL,
	P_NO	NUMBER	NOT NULL,
	PAY_NO	NUMBER	NOT NULL,
	O_DATE	DATE	NULL,
	O_QTT	NUMBER	NULL,
	O_ADRESS	VARCHAR2(60)	NULL,
	O_MESSAGE	VARCHAR2(100)	NULL,
    O_NAME	VARCHAR2(30)	NULL,
    O_PHONE	VARCHAR2(20)	NULL,
    O_POSTNUM	NUMBER	NULL,
    O_ADRESSDETAIL	VARCHAR2(60)	NULL
);

COMMENT ON COLUMN ORDERS.P_NO IS '상품번호';
COMMENT ON COLUMN ORDERS.PAY_NO IS '주문번호';
COMMENT ON COLUMN ORDERS.M_NO IS '회원번호';
COMMENT ON COLUMN ORDERS.O_DATE IS '주문등록일자';
COMMENT ON COLUMN ORDERS.O_QTT IS '주문수량';
COMMENT ON COLUMN ORDERS.O_ADRESS IS '배송주소';
COMMENT ON COLUMN ORDERS.O_MESSAGE IS '주문메세지';
COMMENT ON COLUMN ORDERS.O_NAME IS '구매자명';
COMMENT ON COLUMN ORDERS.O_PHONE IS '배송처전화번호';
COMMENT ON COLUMN ORDERS.O_POSTNUM IS '배송지우편번호';
COMMENT ON COLUMN ORDERS.O_ADRESSDETAIL IS '배송지상세주소';

-- ORDER PK
ALTER TABLE ORDERS ADD CONSTRAINT PK_ORDERS PRIMARY KEY (
	M_NO,
	P_NO,
	PAY_NO
);

-- ORDER FK
ALTER TABLE ORDERS ADD CONSTRAINT FK_MEMBER_TO_ORDERS_1 FOREIGN KEY (
	M_NO
) REFERENCES MEMBER (
	M_NO
);

ALTER TABLE ORDERS ADD CONSTRAINT FK_PRODUCT_TO_ORDERS_1 FOREIGN KEY (
	P_NO
) REFERENCES PRODUCT (
	P_NO
);

ALTER TABLE ORDERS ADD CONSTRAINT FK_PAY_TO_ORDERS_1 FOREIGN KEY (
	PAY_NO
) REFERENCES PAY (
	PAY_NO
);

------------------------------------------------
--------------- BOARD 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE BOARD (
	B_NO	NUMBER		NOT NULL,
	M_NO	NUMBER		NOT NULL,
	B_TYPE	VARCHAR2(10)		NULL,
	B_TITLE	VARCHAR2(1000)		NULL,
	B_TIMESTAMP	TIMESTAMP		NULL,
	B_CONTENT	VARCHAR2(4000)		NULL,
	B_ORIGINAL_FILENAME	VARCHAR2(100)		NULL,
	B_RENAMED_FILENAME	VARCHAR2(100)		NULL,
	B_VIEW	NUMBER		NULL,
	B_STATUS	VARCHAR2(1)		NULL,
	B_ANSWER_STATUS	VARCHAR2(1)		NULL,
    BCATEGORY	VARCHAR2(1000)		NULL,
    COMMENTS	VARCHAR2(2000)		NULL
);

COMMENT ON COLUMN BOARD.B_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.M_NO IS '작성자 번호';
COMMENT ON COLUMN BOARD.B_TYPE IS '게시글타입';
COMMENT ON COLUMN BOARD.B_TITLE IS '제목';
COMMENT ON COLUMN BOARD.B_TIMESTAMP IS '작성일자';
COMMENT ON COLUMN BOARD.B_CONTENT IS '내용';
COMMENT ON COLUMN BOARD.B_ORIGINAL_FILENAME IS '게시 원래 파일명';
COMMENT ON COLUMN BOARD.B_RENAMED_FILENAME IS '게시 변경 파일명';
COMMENT ON COLUMN BOARD.B_VIEW IS '게시 원래 파일명';
COMMENT ON COLUMN BOARD.B_STATUS IS '게시 상태';
COMMENT ON COLUMN BOARD.B_ANSWER_STATUS IS '게시 답변여부';
COMMENT ON COLUMN BOARD.BCATEGORY IS '게시글 카테고리';
COMMENT ON COLUMN BOARD.COMMENTS IS '게시글 댓글';

-- BOARD 시퀀스
CREATE SEQUENCE SEQ_BOARD_NO;

-- BOARD PK
ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
	B_NO
);

-- BOARD FK
ALTER TABLE BOARD ADD CONSTRAINT FK_MEMBER_TO_BOARD_1 FOREIGN KEY (
	M_NO
) REFERENCES MEMBER (
	M_NO
);

------------------------------------------------
--------------- RATE 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE RATE (
	RATE_NO	NUMBER		NULL,
	C_NO	NUMBER		NOT NULL,
	M_NO	NUMBER		NOT NULL,
	RATE_STAR	NUMBER		NULL,
	RATE_COMMENT	VARCHAR2(3000)		NULL,
	RATE_DATE	DATE		NULL,
	RATE_LIKE	NUMBER		NULL
);

COMMENT ON COLUMN RATE.RATE_NO IS '평가 번호';
COMMENT ON COLUMN RATE.C_NO IS '컨텐츠 번호';
COMMENT ON COLUMN RATE.M_NO IS '회원 번호';
COMMENT ON COLUMN RATE.RATE_STAR IS '코멘트 별점';
COMMENT ON COLUMN RATE.RATE_COMMENT IS '컨텐츠 코멘트';
COMMENT ON COLUMN RATE.RATE_DATE IS '코멘트 등록일';
COMMENT ON COLUMN RATE.RATE_LIKE IS '코멘트 좋아요';

-- RATE 시퀀스
CREATE SEQUENCE RATE_SEQ
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       MAXVALUE 9999
       NOCYCLE
       NOCACHE
       NOORDER;

-- RATE PK
ALTER TABLE RATE ADD CONSTRAINT PK_RATE PRIMARY KEY (
	RATE_NO
);


----------------------------------------------------
--------------- RATE LIKES 관련 테이블 ---------------
----------------------------------------------------
CREATE TABLE RATELIKES (
    LIKE_NO NUMBER NOT NULL PRIMARY KEY ,
    RATE_NO NUMBER,
    M_NO NUMBER,
    FOREIGN KEY (RATE_NO) REFERENCES RATE(RATE_NO) ON DELETE CASCADE,
    FOREIGN KEY (M_NO) REFERENCES MEMBER(M_NO) ON DELETE CASCADE 
    );

COMMENT ON COLUMN RATELIKES.LIKE_NO IS '컨텐츠 평가 좋아요 번호';
COMMENT ON COLUMN RATELIKES.RATE_NO IS '평가 번호';
COMMENT ON COLUMN RATELIKES.M_NO IS '회원 번호';


------------------------------------------------
--------------- SALES 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE SALES (
	S_NO	NUMBER		NOT NULL,
	S_DATE	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	S_COUNT	NUMBER		NULL
);

COMMENT ON COLUMN SALES.S_NO IS '매출액 번호';
COMMENT ON COLUMN SALES.S_DATE IS '일별날짜';
COMMENT ON COLUMN SALES.S_COUNT IS '당일총매출';

-- SALES 시퀀스
CREATE SEQUENCE SEQ_SALES_NO NOCACHE;

-- SALES PK
ALTER TABLE SALES ADD CONSTRAINT PK_SALES PRIMARY KEY (
	S_NO
);

------------------------------------------------
---------- JOINMEMBER 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE JOINMEMBER (
	J_NO	NUMBER		NOT NULL,
	J_DATE	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	J_COUNT	NUMBER		NULL
);

COMMENT ON COLUMN JOINMEMBER.J_NO IS '회원가입수 번호';
COMMENT ON COLUMN JOINMEMBER.J_DATE IS '일별날짜';
COMMENT ON COLUMN JOINMEMBER.J_COUNT IS '당일 회원가입자수';

-- JOINMEMBER 시퀀스
CREATE SEQUENCE SEQ_JOINMEMBER_NO NOCACHE;

-- JOINMEMBER PK
ALTER TABLE JOINMEMBER ADD CONSTRAINT PK_JOINMEMBER PRIMARY KEY (
	J_NO
);

------------------------------------------------
--------------- CVIEW 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE CVIEW (
	CV_NO	NUMBER		NOT NULL,
	CV_DATE	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	CV_COUNT	NUMBER		NULL
);

COMMENT ON COLUMN CVIEW.CV_NO IS '조회수 번호';
COMMENT ON COLUMN CVIEW.CV_DATE IS '상세날짜';
COMMENT ON COLUMN CVIEW.CV_COUNT IS '당일 총조회수';

-- CVIEW 시퀀스
CREATE SEQUENCE SEQ_CVIEW_NO NOCACHE;

-- CVIEW PK
ALTER TABLE CVIEW ADD CONSTRAINT PK_CVIEW PRIMARY KEY (
	CV_NO
);

------------------------------------------------
----------- CONTENTSTYPE 관련 테이블 ------------
------------------------------------------------
CREATE TABLE CONTENTSTYPE (
	MOVIE	VARCHAR2(500)		NULL,
	TV	VARCHAR2(500)		NULL,
	WEBTOON	VARCHAR2(500)		NULL,
	BOOK	VARCHAR2(500)		NULL
);

COMMENT ON COLUMN CONTENTSTYPE.MOVIE IS '영화';
COMMENT ON COLUMN CONTENTSTYPE.TV IS 'TV';
COMMENT ON COLUMN CONTENTSTYPE.WEBTOON IS '웹툰';
COMMENT ON COLUMN CONTENTSTYPE.BOOK IS '책';


------------------------------------------------
----------- MONTHLYDATE 관련 테이블 ------------
------------------------------------------------
CREATE TABLE MONTHLYDATA (
	YEARDATA	VARCHAR2(10) DEFAULT TO_CHAR(CURRENT_DATE, 'YYYY') NULL,
	MONTHDATA	VARCHAR2(10) DEFAULT TO_CHAR(CURRENT_DATE, 'MM') NULL,
	CVIEWDATA	NUMBER	DEFAULT 0	NULL,
	JOINMEMBERDATA	NUMBER	DEFAULT 0	NULL,
	SALESDATA	NUMBER	DEFAULT 0	NULL
);

COMMENT ON COLUMN MONTHLYDATA.YEARDATA IS '연간데이터';
COMMENT ON COLUMN MONTHLYDATA.MONTHDATA IS '월간데이터';
COMMENT ON COLUMN MONTHLYDATA.CVIEWDATA IS '조회수데이터';
COMMENT ON COLUMN MONTHLYDATA.JOINMEMBERDATA IS '가입자수데이터';
COMMENT ON COLUMN MONTHLYDATA.SALESDATA IS '매출액 데이터';

-- 기본 데이터 생성
INSERT INTO MONTHLYDATA VALUES(
    DEFAULT,
    DEFAULT,
    DEFAULT,
    DEFAULT,
    DEFAULT    
);


------------------------------------------------
------------- 대시보드 관련 쿼리문 ---------------
------------------------------------------------

-- 대시보드 월별 합계
SELECT SUM(COUNT컬럼) FROM 테이블
WHERE EXTRACT(YEAR FROM DATE컬럼) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM DATE컬럼) = EXTRACT(MONTH FROM CURRENT_DATE);

------------------------------------------------
------------------------------------------------
------------- 오라클 스케쥴러 관련 ---------------
------------------------------------------------
------------------------------------------------

-- CVIEW 조회수 삽입 프로시저
CREATE OR REPLACE PROCEDURE INSERT_CVIEW AS 
BEGIN
INSERT INTO CVIEW VALUES(
    SEQ_CVIEW_NO.NEXTVAL,
    TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'),
    0
    );
END INSERT_CVIEW;

-- JOINMEMBER 가입자수 삽입 프로시저
CREATE OR REPLACE PROCEDURE INSERT_JOINMEMBER AS 
BEGIN
INSERT INTO JOINMEMBER VALUES(
    SEQ_JOINMEMBER_NO.NEXTVAL,
    TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'),
    0
    );
END INSERT_JOINMEMBER;

-- SALES 매출액 삽입 프로시저
CREATE OR REPLACE PROCEDURE INSERT_SALES AS 
BEGIN
INSERT INTO SALES VALUES(
    SEQ_SALES_NO.NEXTVAL,
    TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'),
    0
    );
END INSERT_SALES;

-- MONTHLYDATA 월별 데이터 삽입 프로시저
CREATE OR REPLACE PROCEDURE INSERT_MONTHLYDATA AS 
BEGIN
INSERT INTO MONTHLYDATA VALUES(
    DEFAULT,
    DEFAULT,
    DEFAULT,
    DEFAULT,
    DEFAULT    
);
END INSERT_MONTHLYDATA;

-- CVIEW 조회수 데이터 등록 프로시저
CREATE OR REPLACE PROCEDURE UPDATE_CVIEW AS 
BEGIN
UPDATE CVIEW 
SET CV_COUNT = 
(
SELECT SUM(C_VIEWCOUNT) 
FROM CONTENTS
WHERE EXTRACT(YEAR FROM C_VIEWDATE) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM C_VIEWDATE) = EXTRACT(MONTH FROM CURRENT_DATE) AND EXTRACT(DAY FROM C_VIEWDATE) = EXTRACT(DAY FROM CURRENT_DATE)
);
END UPDATE_CVIEW;

-- JOINMEMBER 가입자수 데이터 등록 프로시저 
CREATE OR REPLACE PROCEDURE UPDATE_JOINMEMBER AS 
BEGIN
UPDATE JOINMEMBER 
SET J_COUNT = 
(
SELECT COUNT(M_JOINDATE) FROM MEMBER
WHERE EXTRACT(YEAR FROM M_JOINDATE) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM M_JOINDATE) = EXTRACT(MONTH FROM CURRENT_DATE) AND EXTRACT(DAY FROM M_JOINDATE) = EXTRACT(DAY FROM CURRENT_DATE)
);
WHERE EXTRACT(YEAR FROM J_DATE) = EXTRACT(YEAR FROM CURRENT_DATE) AND EXTRACT(MONTH FROM J_DATE) = EXTRACT(MONTH FROM CURRENT_DATE) AND EXTRACT(DAY FROM J_DATE) = EXTRACT(DAY FROM CURRENT_DATE);
END UPDATE_JOINMEMBER;

-- SALES 조회수 데이터 등록 프로시저
CREATE OR REPLACE PROCEDURE UPDATE_SALES AS 
BEGIN
UPDATE SALES
SET S_COUNT = (
SELECT SUM(PAY_PRICE) 
FROM PAY
WHERE EXTRACT(YEAR FROM PAY_DATE) = EXTRACT(YEAR FROM TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS')) 
AND EXTRACT(MONTH FROM PAY_DATE) = EXTRACT(MONTH FROM TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS')) 
AND EXTRACT(DAY FROM PAY_DATE) = EXTRACT(DAY FROM TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'))
);
WHERE TRUNC(TO_DATE(TO_CHAR(PAY_DATE , 'YYYY/MM/DD HH24:MI:SS') ,'YYYY/MM/DD HH24:MI:SS'),'DD') = TRUNC(TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'),'DD');
END UPDATE_SALES;

-- CONTENTS 컨텐츠 테이블 매일 현재날짜 변경 및 조회수 초기화
CREATE OR REPLACE PROCEDURE UPDATE_CONTENTS_DATE AS 
BEGIN
UPDATE CONTENTS SET 
C_VIEWDATE = TO_DATE(TO_CHAR(CURRENT_DATE+9/24, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY/MM/DD HH24:MI:SS'),
C_VIEWCOUNT = 0;
END UPDATE_CONTENTS_DATE;

-- CVIEW 조회수 데이터 생성 스케쥴러
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_INSERT_CVIEW',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'INSERT_CVIEW',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/20 00:00:00','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=DAILY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '조회수 테이블 삽입');
END;

-- JOINMEMBER 가입자수 데이터 생성 스케쥴러 ( 매일 00시00분00초에 INSERT )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_INSERT_JOINMEMBER',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'INSERT_JOINMEMBER',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/20 00:00:00','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=DAILY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '가입자수 테이블 삽입');
END;

-- SALES 매출액 데이터 생성 스케쥴러
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_INSERT_SALES',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'INSERT_SALES',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/20 00:00:00','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=DAILY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '매출액 테이블 삽입');
END;

-- MONTHLYDATA 월별 데이터 생성 스케쥴러
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_INSERT_MONTHLYDATA',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'INSERT_MONTHLYDATA',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => CURRENT_DATE,
            REPEAT_INTERVAL => 'FREQ=MONTHLY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '월별 데이터 테이블 삽입');
END;

-- CONTENTSTYPE 컨텐츠 타입별 데이터 업데이트 프로시저
CREATE OR REPLACE PROCEDURE UPDATE_CONTENTSTYPE AS 
BEGIN
UPDATE CONTENTSTYPE SET 
MOVIE = (
SELECT COUNT(*)
FROM CONTENTS
WHERE C_TYPE = '영화'),
TV = (
SELECT COUNT(*)
FROM CONTENTS
WHERE C_TYPE = 'TV'),
BOOK = (
SELECT COUNT(*)
FROM CONTENTS
WHERE C_TYPE = '도서'),
WEBTOON = (
SELECT COUNT(*)
FROM CONTENTS
WHERE C_TYPE = '웹툰');
END UPDATE_CONTENTSTYPE;

-- MONTHLYDATA 월별 데이터 업데이트 프로시저
create or replace PROCEDURE UPDATE_MONTHLYDATA AS 
BEGIN
UPDATE MONTHLYDATA 
SET 
CVIEWDATA = (
SELECT SUM(CV_COUNT)
FROM CVIEW
WHERE TO_CHAR(CV_DATE, 'YYYYMM') = TO_CHAR(CURRENT_DATE,'YYYYMM')
),
JOINMEMBERDATA = (
SELECT SUM(J_COUNT)
FROM JOINMEMBER
WHERE TO_CHAR(J_DATE, 'YYYYMM') = TO_CHAR(CURRENT_DATE,'YYYYMM')
),
SALESDATA = (
SELECT SUM(S_COUNT)
FROM SALES
WHERE TO_CHAR(S_DATE, 'YYYYMM') = TO_CHAR(CURRENT_DATE,'YYYYMM')
)
WHERE YEARDATA = TO_CHAR(CURRENT_DATE,'YYYY') AND MONTHDATA = TO_CHAR(CURRENT_DATE,'MM');
END UPDATE_MONTHLYDATA;

-- CVIEW 조회수 데이터값 추가 스케쥴러 ( 1시간에 한번씩 UPDATE )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_CVIEW',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_CVIEW',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/18 23:59:30','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=HOURLY ;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => 'CVIEW 조회수 테이블 데이터 증가(1시간에 1번 테스트중');
END;

-- JOINMEMBER 가입자수 데이터값 추가 스케쥴러 ( 1시간에 한번씩 UPDATE )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_JOINMEMBER',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_JOINMEMBER',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/18 23:59:50','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=HOURLY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '가입자수 테이블 데이터 증가(1시간에 1번)');
END;

-- SALES 매출액 데이터값 추가 스케쥴러 ( 1시간에 한번씩 UPDATE )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_SALES',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_SALES',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/20 01:59:50','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=HOURLY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '매출액 테이블 데이터 증가 (1시간에 1번)');
END;

-- CONTENTSTYPE 컨텐츠 타입별 데이터 생성 스케쥴러 ( 매 1시간에 한번씩 )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_CONTENTSTYPE',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_CONTENTSTYPE',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => CURRENT_TIMESTAMP,
            REPEAT_INTERVAL => 'FREQ=MINUTELY ;INTERVAL=30',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '컨텐츠 타입별 테이블 삽입 (1시간에 한번씩 수행)');
END;

-- CONTENTS 컨텐츠 테이블 매일 현재날짜 변경 및 조회수 초기화( 매일 00시00분10초에 UPDATE )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_CONTENTS_DATE',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_CONTENTS_DATE',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/20 00:00:10','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=DAILY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '컨텐츠 테이블 매일 현재날짜 변경 및 조회수 초기화 (매일 00:00)');
END;

-- MONTHLYDATA 월별 데이터값 추가 스케쥴러 ( 1시간에 한번씩 UPDATE )
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
            JOB_NAME => 'JOB_UPDATE_MONTHLYDATA',
            JOB_TYPE => 'STORED_PROCEDURE',
            JOB_ACTION => 'UPDATE_MONTHLYDATA',
            NUMBER_OF_ARGUMENTS => 0,
            START_DATE => TO_DATE('2022/10/19 23:59:40','YYYY/MM/DD HH24:MI:SS'),
            REPEAT_INTERVAL => 'FREQ=HOURLY;INTERVAL=1',
            END_DATE => NULL,
            ENABLED => TRUE,
            AUTO_DROP => FALSE,
            COMMENTS => '월별 테이블 데이터 증가 (1시간에 1번)');
END;


---- 스케쥴러 활성화
--BEGIN
--  DBMS_SCHEDULER.ENABLE(NAME=>'JOB_INSERT_CVIEW');
--END;
--
---- 스케쥴러 비활성화
--BEGIN
--  DBMS_SCHEDULER.DISABLE(NAME=>'JOB_UPDATE_VISIT');
--END;

--스케줄러 interval 변경
--
--EXECUTE DBMS_SCHEDULER.SET_ATTRIBUTE('JOB_NAME 입력', 'REPEAT_INTERVAL',  'FREQ=MINUTELY;INTERVAL=1' );

-- 스케쥴러 로그 조회
SELECT * FROM USER_SCHEDULER_JOBS;
SELECT * FROM USER_SCHEDULER_JOB_LOG;
SELECT * FROM USER_SCHEDULER_JOB_RUN_DETAILS;

-- 스케쥴러 삭제
--BEGIN
--    DBMS_SCHEDULER.DROP_JOB(JOB_NAME => 'JOB_UPDATE_CVIEW',
--                                DEFER => FALSE,
--                                FORCE => FALSE);
--END;

-- 프로시저 삭제
--DROP PROCEDURE UPDATE_D_TEST_DATE;


---- 타임존 설정관련 (+9:00) KST
---- 연결동안 세션 시간대 변경
--ALTER SESSION SET TIME_ZONE = 'Asia/Seoul'
---- 시간대 확인
--SELECT DBTIMEZONE, SESSIONTIMEZONE FROM DUAL;
--SELECT SYSTIMESTAMP, SYSDATE FROM DUAL;
--SELECT SESSIONTIMEZONE FROM DUAL;
--SELECT DBTIMEZONE FROM DUAL;
--SELECT LOCALTIMESTAMP FROM DUAL;
--SELECT CURRENT_TIMESTAMP FROM DUAL;
--SELECT CURRENT_DATE, CURRENT_TIMESTAMP, LOCALTIMESTAMP FROM DUAL;
--SELECT DBTIMEZONE FROM DUAL;
--SELECT SESSIONTIMEZONE FROM DUAL;
--ALTER SESSION SET TIME_ZONE = 'Asia/Seoul';
---- 시간대 변경 (+9:00)
--ALTER DATABASE SET TIME_ZONE = '+09:00';
---- DB 종료 및 재시작
--SHUTDOWN IMMEDIATE;
--STARTUP;
---- 시퀀스 값 수정
--select * from user_sequences where sequence_name ='SEQ_CVIEW_NO';
--select SEQ_CVIEW_NO.nextval from dual;


------------------------------------------------
--------------------- DROP --------------------
------------------------------------------------

-- DROP TABLE BOARD;
-- DROP TABLE CART;
-- DROP TABLE COMMENTS;
-- DROP TABLE CONTENTS;
-- DROP TABLE CONTENTSPEOPLE;
-- DROP TABLE LIKES;
-- DROP TABLE MEMBER;
-- DROP TABLE NOTICE;
-- DROP TABLE OREDERS;
-- DROP TABLE PAY;
-- DROP TABLE PEOPLE;
-- DROP TABLE PRODUCT;
-- DROP TABLE RATE;
-- DROP TABLE REVIEW;
-- DROP TABLE CVIEW;
-- DROP TABLE JOINMEMBER;
-- DROP TABLE SALES;
-- DROP TABLE CONTENTSTYPE;
-- DROP TABLE MONTHLYDATA;

-- DROP SEQUENCE CONTENTS_SEQ;
-- DROP SEQUENCE MEMBER_SEQ;
-- DROP SEQUENCE RATE_SEQ;
-- DROP SEQUENCE SEQ_BOARD_NO;
-- DROP SEQUENCE SEQ_CARTNO;
-- DROP SEQUENCE SEQ_COMMENTS_NO;
-- DROP SEQUENCE SEQ_CONTENTSPEOPLE_NO;
-- DROP SEQUENCE SEQ_NOTICE_NO;
-- DROP SEQUENCE SEQ_PAYNO;
-- DROP SEQUENCE SEQ_PEOPLE_NO;
-- DROP SEQUENCE SEQ_PNO_NO;
-- DROP SEQUENCE SEQ_REVNO;
-- DROP SEQUENCE SEQ_UNO;
-- DROP SEQUENCE SEQ_CVIEW_NO;
-- DROP SEQUENCE SEQ_JOINMEMBER_NO;
-- DROP SEQUENCE SEQ_SALES_NO;